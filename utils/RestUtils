package com.jiohealth.systemofidentityservice.utils;

import com.jiohealth.systemofidentityservice.config.Application;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.springframework.stereotype.Component;
import org.springframework.web.client.HttpServerErrorException;
import org.springframework.web.client.HttpStatusCodeException;
import org.springframework.web.client.RestTemplate;

import java.util.Map;

@Component
public class RestUtils {

    @Autowired
    Application application;

    private static Logger log = LoggerFactory.getLogger(RestUtils.class);


    public <T> ResponseEntity<T> makeApiCall(HttpMethod httpMethod, String url, HttpHeaders headers, Object reqBody, Class<T> responseType){
        log.debug("Calling endpoint " + url + " with request body " + reqBody.toString());
        RestTemplate restTemplate = new RestTemplate();
        HttpEntity<Object> entity;
        if(reqBody instanceof Map) {
            entity = new HttpEntity<>((Map) reqBody, headers);
        } else if (reqBody instanceof String){
            entity = new HttpEntity<>((String) reqBody, headers);
        } else {
            throw new IllegalArgumentException("reqBody must be either a Map or a String");
        }
        log.debug("whole entity header: {}",entity.getHeaders());
        try {
            ResponseEntity<T> apiResponse = restTemplate.exchange(url, httpMethod, entity, responseType);
            log.debug("Endpoint '{}' - status '{}' - response '{}'", url, apiResponse.getStatusCodeValue(), apiResponse.getBody());
            return apiResponse;
        } catch (HttpStatusCodeException e) {
            log.error("Error making API call: " + e.getMessage());
            throw new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR, "Could not call the API - " + e.getMessage());
        }
    }

}
